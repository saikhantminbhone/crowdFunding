{"version":3,"file":"errors.cjs","sources":["../../../../src/plugins/candyMachineV2Module/errors.ts"],"sourcesContent":["import { EndSettingType } from '@metaplex-foundation/mpl-candy-machine';\nimport { CandyMachineV2Item, CandyMachineV2EndSettings } from './models';\nimport {\n  MetaplexError,\n  MetaplexErrorInputWithoutSource,\n  MetaplexErrorOptions,\n} from '@/errors';\nimport { BigNumber, DateTime, formatDateTime } from '@/types';\nimport { Option } from '@/utils';\n\n/** @group Errors */\nexport class CandyMachineV2Error extends MetaplexError {\n  constructor(input: MetaplexErrorInputWithoutSource) {\n    super({\n      ...input,\n      key: `plugin.candy_machine_v2.${input.key}`,\n      title: `Candy Machine V2 > ${input.title}`,\n      source: 'plugin',\n      sourceDetails: 'Candy Machine V2',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineV2IsFullError extends CandyMachineV2Error {\n  constructor(\n    assetIndex: BigNumber,\n    itemsAvailable: BigNumber,\n    options?: MetaplexErrorOptions\n  ) {\n    super({\n      options,\n      key: 'candy_machine_is_full',\n      title: 'Candy Machine Is Full',\n      problem:\n        `Trying to add asset number ${assetIndex.addn(1)}, but ` +\n        `candy machine only can hold ${itemsAvailable} assets.`,\n      solution:\n        'Limit number of assets you are adding or create a new Candy Machine that can hold more.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineV2IsEmptyError extends CandyMachineV2Error {\n  constructor(itemsAvailable: BigNumber, options?: MetaplexErrorOptions) {\n    super({\n      options,\n      key: 'candy_machine_is_empty',\n      title: 'Candy Machine Is Empty',\n      problem:\n        `You're trying to mint from an empty candy machine. ` +\n        `All ${itemsAvailable} items have been minted.`,\n      solution: 'You can no longer mint from this Candy Machine.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineV2CannotAddAmountError extends CandyMachineV2Error {\n  constructor(\n    index: BigNumber,\n    amount: number,\n    itemsAvailable: BigNumber,\n    options?: MetaplexErrorOptions\n  ) {\n    super({\n      options,\n      key: 'candy_machine_cannot_add_amount',\n      title: 'Candy Machine Cannot Add Amount',\n      problem: `Trying to add ${amount} assets to candy machine that already has ${index} assets and can only hold ${itemsAvailable} assets.`,\n      solution:\n        'Limit number of assets you are adding or create a new Candy Machine that can hold more.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineV2AddItemConstraintsViolatedError extends CandyMachineV2Error {\n  constructor(\n    index: BigNumber,\n    item: CandyMachineV2Item,\n    options?: MetaplexErrorOptions\n  ) {\n    super({\n      options,\n      key: 'candy_machine_add_item_constraints_violated',\n      title: 'Candy Machine Add Item Constraints Violated',\n      problem: `Trying to add an asset with name \"${item.name}\" and uri: \"${item.uri}\" to candy machine at index ${index} that violates constraints.`,\n      solution: 'Fix the name or URI of this asset and try again.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineV2NotLiveError extends CandyMachineV2Error {\n  constructor(goLiveDate: Option<DateTime>, options?: MetaplexErrorOptions) {\n    super({\n      options,\n      key: 'candy_machine_not_live',\n      title: 'Candy Machine Not Live',\n      problem:\n        `You're trying to mint from a Candy Machine which is not live yet. ` +\n        (goLiveDate\n          ? `It will go live on ${formatDateTime(goLiveDate)}.`\n          : `Its live date has not been set yet.`),\n      solution:\n        'You need to wait until the Candy Machine is live to mint from it. ' +\n        'If this is your Candy Machine, use \"metaplex.candyMachinesV2().update(...)\" to set the live date. ' +\n        'Note that the authority of the Candy Machine can mint regardless of the live date.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineV2EndedError extends CandyMachineV2Error {\n  constructor(\n    endSetting: CandyMachineV2EndSettings,\n    options?: MetaplexErrorOptions\n  ) {\n    const endSettingType =\n      endSetting.endSettingType === EndSettingType.Amount ? 'Amount' : 'Date';\n    const endSettingExplanation =\n      endSetting.endSettingType === EndSettingType.Amount\n        ? `All ${endSetting.number} items have been minted.`\n        : `It ended on ${formatDateTime(endSetting.date)}.`;\n    super({\n      options,\n      key: 'candy_machine_ended',\n      title: 'Candy Machine Ended',\n      problem:\n        `The end condition [${endSettingType}] of this Candy Machine has been reached. ` +\n        endSettingExplanation,\n      solution: 'You can no longer mint from this Candy Machine.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineV2BotTaxError extends CandyMachineV2Error {\n  constructor(\n    explorerLink: string,\n    cause: Error,\n    options?: Omit<MetaplexErrorOptions, 'cause'>\n  ) {\n    super({\n      options: { ...options, cause },\n      key: 'candy_machine_bot_tax',\n      title: 'Candy Machine Bot Tax',\n      problem:\n        `The NFT couldn't be fetched after being minted. ` +\n        `This is most likely due to a bot tax that occured during minting. ` +\n        `When someone tries to mint an NFT from a Candy Machine which cannot be minted from, ` +\n        `the program will succeed and charge a small tax to fight against bots.`,\n      solution:\n        `Ensure you can mint from the Candy Machine. ` +\n        `You may want to check the transaction logs for more details: [${explorerLink}].`,\n    });\n  }\n}\n"],"names":["CandyMachineV2Error","MetaplexError","constructor","input","key","title","source","sourceDetails","CandyMachineV2IsFullError","assetIndex","itemsAvailable","options","problem","addn","solution","CandyMachineV2IsEmptyError","CandyMachineV2CannotAddAmountError","index","amount","CandyMachineV2AddItemConstraintsViolatedError","item","name","uri","CandyMachineV2NotLiveError","goLiveDate","formatDateTime","CandyMachineV2EndedError","endSetting","endSettingType","EndSettingType","Amount","endSettingExplanation","number","date","CandyMachineV2BotTaxError","explorerLink","cause"],"mappings":"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"}