{"version":3,"file":"errors.cjs","sources":["../../../../src/plugins/candyMachineModule/errors.ts"],"sourcesContent":["import {\n  MetaplexError,\n  MetaplexErrorInputWithoutSource,\n  MetaplexErrorOptions,\n} from '@/errors';\n\n/** @group Errors */\nexport class CandyMachineV3Error extends MetaplexError {\n  constructor(input: MetaplexErrorInputWithoutSource) {\n    super({\n      ...input,\n      key: `plugin.candy_machine_v3.${input.key}`,\n      title: `Candy Machine V3 > ${input.title}`,\n      source: 'plugin',\n      sourceDetails: 'Candy Machine V3',\n    });\n  }\n}\n\n/** @group Errors */\nexport class UnregisteredCandyGuardError extends CandyMachineV3Error {\n  constructor(name: string, options?: MetaplexErrorOptions) {\n    super({\n      options,\n      key: 'unregistered_candy_guard',\n      title: 'Unregistered Candy Guard',\n      problem:\n        `The SDK is trying to access a custom Candy Guard named [${name}] ` +\n        `but that guard was not registered in the SDK`,\n      solution:\n        'Register your custom guard by calling the `metaplex.candyMachines().guards().register()` method.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineIsFullError extends CandyMachineV3Error {\n  constructor(\n    index: number,\n    itemsAvailable: number,\n    options?: MetaplexErrorOptions\n  ) {\n    super({\n      options,\n      key: 'candy_machine_is_full',\n      title: 'Candy Machine Is Full',\n      problem:\n        `You are trying to add an item at index ${index} to a Candy Machine that ` +\n        `can only hold a maximum of ${itemsAvailable} items.`,\n      solution:\n        'Limit number of items you are adding or create a Candy Machine that can hold more of them.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineCannotAddAmountError extends CandyMachineV3Error {\n  constructor(\n    index: number,\n    amount: number,\n    itemsAvailable: number,\n    options?: MetaplexErrorOptions\n  ) {\n    super({\n      options,\n      key: 'candy_machine_cannot_add_amount',\n      title: 'Candy Machine Cannot Add Amount',\n      problem:\n        `You are trying to add ${amount} items to candy machine starting at index ${index} ` +\n        ` but it can only hold a maximum of ${itemsAvailable} items.`,\n      solution:\n        'Limit number of assets you are adding or create a Candy Machine that can hold more of them.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineItemTextTooLongError extends CandyMachineV3Error {\n  constructor(\n    index: number,\n    type: 'name' | 'uri',\n    text: string,\n    limit: number,\n    options?: MetaplexErrorOptions\n  ) {\n    super({\n      options,\n      key: 'candy_machine_item_text_too_long',\n      title: 'Candy Machine Item Text Too Long',\n      problem:\n        `You are trying to add an item to a Candy Machine but its ${type} is too long. ` +\n        `The item settings define the ${type} limit as ${limit} characters but the following ` +\n        `content was provided [${text}] for the item at index ${index}`,\n      solution: `Reduce the size of the ${type} for the item at index ${index}.`,\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyMachineBotTaxError extends CandyMachineV3Error {\n  constructor(\n    explorerLink: string,\n    cause: Error,\n    options?: Omit<MetaplexErrorOptions, 'cause'>\n  ) {\n    super({\n      options: { ...options, cause },\n      key: 'candy_machine_bot_tax',\n      title: 'Candy Machine Bot Tax',\n      problem:\n        `The NFT couldn't be fetched after being minted. ` +\n        `This is most likely due to a bot tax that occured during minting. ` +\n        `When someone tries to mint an NFT from a Candy Machine which cannot be minted from, ` +\n        `the program will succeed and charge a small tax to fight against bots.`,\n      solution:\n        `Ensure you can mint from the Candy Machine. ` +\n        `You may want to check the transaction logs for more details: [${explorerLink}].`,\n    });\n  }\n}\n\n/** @group Errors */\nexport class GuardGroupRequiredError extends CandyMachineV3Error {\n  constructor(availableGroups: string[], options?: MetaplexErrorOptions) {\n    super({\n      options,\n      key: 'guard_group_required',\n      title: 'Guard Group Required',\n      problem:\n        'The provided Candy Machine defines groups of guards but no' +\n        'group label was provided to identity which group we should select.',\n      solution:\n        'Please provide the label of the group you wish to select from via the `group` parameter. ' +\n        `The available groups are [${availableGroups.join(', ')}]`,\n    });\n  }\n}\n\n/** @group Errors */\nexport class SelectedGuardGroupDoesNotExistError extends CandyMachineV3Error {\n  constructor(\n    selectedGroup: string,\n    availableGroups: string[],\n    options?: MetaplexErrorOptions\n  ) {\n    super({\n      options,\n      key: 'selected_guard_group_does_not_exist',\n      title: 'Selected Guard Group Does Not Exist',\n      problem:\n        `You're trying to select the guard group [${selectedGroup}] from a ` +\n        'Candy Machine but this group does not exists on this Candy Machine.',\n      solution:\n        availableGroups.length > 0\n          ? 'Please provide the label of a group that exists on the Candy Machine. ' +\n            `The available groups are [${availableGroups.join(', ')}]`\n          : 'There are no guard groups defined on the Candy Machine. ' +\n            'Please set the `group` parameter to `null` or remove it altogether.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class GuardMintSettingsMissingError extends CandyMachineV3Error {\n  constructor(guardName: string, options?: MetaplexErrorOptions) {\n    super({\n      options,\n      key: 'guard_mint_settings_missing',\n      title: 'Guard Mint Settings Missing',\n      problem:\n        `The Candy Machine you are trying to mint from has the [${guardName}] guard enabled. ` +\n        'This guard requires you to provide some additional settings when minting which you did not provide.',\n      solution:\n        `Please provide some minting settings for the [${guardName}] guard ` +\n        `via the \\`guards\\` parameter like so: \\`guards.${guardName} = {...}\\`.`,\n    });\n  }\n}\n\n/** @group Errors */\nexport class GuardRouteNotSupportedError extends CandyMachineV3Error {\n  constructor(guardName: string, options?: MetaplexErrorOptions) {\n    super({\n      options,\n      key: 'guard_route_not_supported',\n      title: 'Guard Route Not Supported',\n      problem:\n        `You are trying to call the route instruction of the [${guardName}] guard ` +\n        'but this guard does not support this feature or did not register it on the SDK.',\n      solution:\n        'Please select a guard that support the route instruction feature. ' +\n        'If you are using a custom guard, make sure you registered the route instruction ' +\n        'feature by implementing the `routeSettingsParser` method on the guard manifest.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class CandyGuardRequiredOnCandyMachineError extends CandyMachineV3Error {\n  constructor(options?: MetaplexErrorOptions) {\n    super({\n      options,\n      key: 'candy_guard_required_on_candy_machine',\n      title: 'Candy Guard Required On Candy Machine',\n      problem:\n        `The provided Candy Machine does not have a Candy Guard associated with ` +\n        `it yet, it is required for the operation you are trying to execute.`,\n      solution:\n        'Please provide a Candy Machine with an associated Candy Guard account.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class GuardNotEnabledError extends CandyMachineV3Error {\n  constructor(\n    guard: string,\n    group: string | null,\n    options?: MetaplexErrorOptions\n  ) {\n    super({\n      options,\n      key: 'guard_not_enabled',\n      title: 'Guard Not Enabled',\n      problem: group\n        ? `The guard [${guard}] is not enabled on the group [${group}] of the Candy Machine.`\n        : `The guard [${guard}] is not enabled on the Candy Machine.`,\n      solution:\n        'Please provide a different guard or select a different group ' +\n        'such that the provided guard is enabled on the selected group.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class GuardGroupLabelTooLongError extends CandyMachineV3Error {\n  constructor(\n    label: string,\n    maxLength: number,\n    options?: MetaplexErrorOptions\n  ) {\n    super({\n      options,\n      key: 'guard_group_label_too_long',\n      title: 'Guard Group Label Too Long',\n      problem:\n        `The provided group label [${label}] is too long. ` +\n        `Group labels cannot be longer than ${maxLength} characters.`,\n      solution: 'Please provide a shorter group label.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class UnrecognizePathForRouteInstructionError extends CandyMachineV3Error {\n  constructor(guard: string, path: string, options?: MetaplexErrorOptions) {\n    super({\n      options,\n      key: 'unrecognize_path_for_route_instruction',\n      title: 'Unrecognize Path For Route Instruction',\n      problem: `The provided path [${path}] does not exist on the route instruction of the [${guard}] guard.`,\n      solution: 'Please provide a recognized path.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class MintOwnerMustBeMintPayerError extends CandyMachineV3Error {\n  constructor(guard: string, options?: MetaplexErrorOptions) {\n    super({\n      options,\n      key: 'mint_owner_must_be_mint_payer',\n      title: 'Mint Owner Must Be Mint Payer',\n      problem: `The payer must be the owner when using the [${guard}] guard.`,\n      solution:\n        'Please remove the `owner` attribute from the mint input so they can be the same.',\n    });\n  }\n}\n\n/** @group Errors */\nexport class MaximumOfFiveAdditionalProgramsError extends CandyMachineV3Error {\n  constructor(options?: MetaplexErrorOptions) {\n    super({\n      options,\n      key: 'maximum_of_five_additonal_programs',\n      title: 'Maximum of Five Additional Programs',\n      problem: `There is a maximum of five additional programs when using the [programGate] guard.`,\n      solution: 'Please reduce the number of additional programs to <= 5.',\n    });\n  }\n}\n"],"names":["CandyMachineV3Error","MetaplexError","constructor","input","key","title","source","sourceDetails","UnregisteredCandyGuardError","name","options","problem","solution","CandyMachineIsFullError","index","itemsAvailable","CandyMachineCannotAddAmountError","amount","CandyMachineItemTextTooLongError","type","text","limit","CandyMachineBotTaxError","explorerLink","cause","GuardGroupRequiredError","availableGroups","join","SelectedGuardGroupDoesNotExistError","selectedGroup","length","GuardMintSettingsMissingError","guardName","GuardRouteNotSupportedError","CandyGuardRequiredOnCandyMachineError","GuardNotEnabledError","guard","group","GuardGroupLabelTooLongError","label","maxLength","UnrecognizePathForRouteInstructionError","path","MintOwnerMustBeMintPayerError","MaximumOfFiveAdditionalProgramsError"],"mappings":";;;;;;AAMA;AACO,MAAMA,mBAAmB,SAASC,2BAAa,CAAC;EACrDC,WAAW,CAACC,KAAsC,EAAE;AAClD,IAAA,KAAK,CAAC;AACJ,MAAA,GAAGA,KAAK;AACRC,MAAAA,GAAG,EAAG,CAAA,wBAAA,EAA0BD,KAAK,CAACC,GAAI,CAAC,CAAA;AAC3CC,MAAAA,KAAK,EAAG,CAAA,mBAAA,EAAqBF,KAAK,CAACE,KAAM,CAAC,CAAA;AAC1CC,MAAAA,MAAM,EAAE,QAAQ;AAChBC,MAAAA,aAAa,EAAE,kBAAA;AACjB,KAAC,CAAC,CAAA;AACJ,GAAA;AACF,CAAA;;AAEA;AACO,MAAMC,2BAA2B,SAASR,mBAAmB,CAAC;AACnEE,EAAAA,WAAW,CAACO,IAAY,EAAEC,OAA8B,EAAE;AACxD,IAAA,KAAK,CAAC;MACJA,OAAO;AACPN,MAAAA,GAAG,EAAE,0BAA0B;AAC/BC,MAAAA,KAAK,EAAE,0BAA0B;AACjCM,MAAAA,OAAO,EACJ,CAAA,wDAAA,EAA0DF,IAAK,CAAA,EAAA,CAAG,GAClE,CAA6C,4CAAA,CAAA;AAChDG,MAAAA,QAAQ,EACN,kGAAA;AACJ,KAAC,CAAC,CAAA;AACJ,GAAA;AACF,CAAA;;AAEA;AACO,MAAMC,uBAAuB,SAASb,mBAAmB,CAAC;AAC/DE,EAAAA,WAAW,CACTY,KAAa,EACbC,cAAsB,EACtBL,OAA8B,EAC9B;AACA,IAAA,KAAK,CAAC;MACJA,OAAO;AACPN,MAAAA,GAAG,EAAE,uBAAuB;AAC5BC,MAAAA,KAAK,EAAE,uBAAuB;AAC9BM,MAAAA,OAAO,EACJ,CAAyCG,uCAAAA,EAAAA,KAAM,2BAA0B,GACzE,CAAA,2BAAA,EAA6BC,cAAe,CAAQ,OAAA,CAAA;AACvDH,MAAAA,QAAQ,EACN,4FAAA;AACJ,KAAC,CAAC,CAAA;AACJ,GAAA;AACF,CAAA;;AAEA;AACO,MAAMI,gCAAgC,SAAShB,mBAAmB,CAAC;EACxEE,WAAW,CACTY,KAAa,EACbG,MAAc,EACdF,cAAsB,EACtBL,OAA8B,EAC9B;AACA,IAAA,KAAK,CAAC;MACJA,OAAO;AACPN,MAAAA,GAAG,EAAE,iCAAiC;AACtCC,MAAAA,KAAK,EAAE,iCAAiC;MACxCM,OAAO,EACJ,yBAAwBM,MAAO,CAAA,0CAAA,EAA4CH,KAAM,CAAE,CAAA,CAAA,GACnF,CAAqCC,mCAAAA,EAAAA,cAAe,CAAQ,OAAA,CAAA;AAC/DH,MAAAA,QAAQ,EACN,6FAAA;AACJ,KAAC,CAAC,CAAA;AACJ,GAAA;AACF,CAAA;;AAEA;AACO,MAAMM,gCAAgC,SAASlB,mBAAmB,CAAC;EACxEE,WAAW,CACTY,KAAa,EACbK,IAAoB,EACpBC,IAAY,EACZC,KAAa,EACbX,OAA8B,EAC9B;AACA,IAAA,KAAK,CAAC;MACJA,OAAO;AACPN,MAAAA,GAAG,EAAE,kCAAkC;AACvCC,MAAAA,KAAK,EAAE,kCAAkC;AACzCM,MAAAA,OAAO,EACJ,CAAA,yDAAA,EAA2DQ,IAAK,CAAA,cAAA,CAAe,GAC/E,CAA+BA,6BAAAA,EAAAA,IAAK,CAAYE,UAAAA,EAAAA,KAAM,gCAA+B,GACrF,CAAA,sBAAA,EAAwBD,IAAK,CAAA,wBAAA,EAA0BN,KAAM,CAAC,CAAA;AACjEF,MAAAA,QAAQ,EAAG,CAAA,uBAAA,EAAyBO,IAAK,CAAA,uBAAA,EAAyBL,KAAM,CAAA,CAAA,CAAA;AAC1E,KAAC,CAAC,CAAA;AACJ,GAAA;AACF,CAAA;;AAEA;AACO,MAAMQ,uBAAuB,SAAStB,mBAAmB,CAAC;AAC/DE,EAAAA,WAAW,CACTqB,YAAoB,EACpBC,KAAY,EACZd,OAA6C,EAC7C;AACA,IAAA,KAAK,CAAC;AACJA,MAAAA,OAAO,EAAE;AAAE,QAAA,GAAGA,OAAO;AAAEc,QAAAA,KAAAA;OAAO;AAC9BpB,MAAAA,GAAG,EAAE,uBAAuB;AAC5BC,MAAAA,KAAK,EAAE,uBAAuB;AAC9BM,MAAAA,OAAO,EACJ,CAAiD,gDAAA,CAAA,GACjD,oEAAmE,GACnE,CAAA,oFAAA,CAAqF,GACrF,CAAuE,sEAAA,CAAA;AAC1EC,MAAAA,QAAQ,EACL,CAAA,4CAAA,CAA6C,GAC7C,CAAA,8DAAA,EAAgEW,YAAa,CAAA,EAAA,CAAA;AAClF,KAAC,CAAC,CAAA;AACJ,GAAA;AACF,CAAA;;AAEA;AACO,MAAME,uBAAuB,SAASzB,mBAAmB,CAAC;AAC/DE,EAAAA,WAAW,CAACwB,eAAyB,EAAEhB,OAA8B,EAAE;AACrE,IAAA,KAAK,CAAC;MACJA,OAAO;AACPN,MAAAA,GAAG,EAAE,sBAAsB;AAC3BC,MAAAA,KAAK,EAAE,sBAAsB;MAC7BM,OAAO,EACL,4DAA4D,GAC5D,oEAAoE;MACtEC,QAAQ,EACN,2FAA2F,GAC1F,CAAA,0BAAA,EAA4Bc,eAAe,CAACC,IAAI,CAAC,IAAI,CAAE,CAAA,CAAA,CAAA;AAC5D,KAAC,CAAC,CAAA;AACJ,GAAA;AACF,CAAA;;AAEA;AACO,MAAMC,mCAAmC,SAAS5B,mBAAmB,CAAC;AAC3EE,EAAAA,WAAW,CACT2B,aAAqB,EACrBH,eAAyB,EACzBhB,OAA8B,EAC9B;AACA,IAAA,KAAK,CAAC;MACJA,OAAO;AACPN,MAAAA,GAAG,EAAE,qCAAqC;AAC1CC,MAAAA,KAAK,EAAE,qCAAqC;AAC5CM,MAAAA,OAAO,EACJ,CAAA,yCAAA,EAA2CkB,aAAc,CAAA,SAAA,CAAU,GACpE,qEAAqE;AACvEjB,MAAAA,QAAQ,EACNc,eAAe,CAACI,MAAM,GAAG,CAAC,GACtB,wEAAwE,GACvE,6BAA4BJ,eAAe,CAACC,IAAI,CAAC,IAAI,CAAE,CAAE,CAAA,CAAA,GAC1D,0DAA0D,GAC1D,qEAAA;AACR,KAAC,CAAC,CAAA;AACJ,GAAA;AACF,CAAA;;AAEA;AACO,MAAMI,6BAA6B,SAAS/B,mBAAmB,CAAC;AACrEE,EAAAA,WAAW,CAAC8B,SAAiB,EAAEtB,OAA8B,EAAE;AAC7D,IAAA,KAAK,CAAC;MACJA,OAAO;AACPN,MAAAA,GAAG,EAAE,6BAA6B;AAClCC,MAAAA,KAAK,EAAE,6BAA6B;AACpCM,MAAAA,OAAO,EACJ,CAAA,uDAAA,EAAyDqB,SAAU,CAAA,iBAAA,CAAkB,GACtF,qGAAqG;AACvGpB,MAAAA,QAAQ,EACL,CAAgDoB,8CAAAA,EAAAA,SAAU,CAAS,QAAA,CAAA,GACnE,kDAAiDA,SAAU,CAAA,WAAA,CAAA;AAChE,KAAC,CAAC,CAAA;AACJ,GAAA;AACF,CAAA;;AAEA;AACO,MAAMC,2BAA2B,SAASjC,mBAAmB,CAAC;AACnEE,EAAAA,WAAW,CAAC8B,SAAiB,EAAEtB,OAA8B,EAAE;AAC7D,IAAA,KAAK,CAAC;MACJA,OAAO;AACPN,MAAAA,GAAG,EAAE,2BAA2B;AAChCC,MAAAA,KAAK,EAAE,2BAA2B;AAClCM,MAAAA,OAAO,EACJ,CAAA,qDAAA,EAAuDqB,SAAU,CAAA,QAAA,CAAS,GAC3E,iFAAiF;AACnFpB,MAAAA,QAAQ,EACN,oEAAoE,GACpE,kFAAkF,GAClF,iFAAA;AACJ,KAAC,CAAC,CAAA;AACJ,GAAA;AACF,CAAA;;AAEA;AACO,MAAMsB,qCAAqC,SAASlC,mBAAmB,CAAC;EAC7EE,WAAW,CAACQ,OAA8B,EAAE;AAC1C,IAAA,KAAK,CAAC;MACJA,OAAO;AACPN,MAAAA,GAAG,EAAE,uCAAuC;AAC5CC,MAAAA,KAAK,EAAE,uCAAuC;MAC9CM,OAAO,EACJ,CAAwE,uEAAA,CAAA,GACxE,CAAoE,mEAAA,CAAA;AACvEC,MAAAA,QAAQ,EACN,wEAAA;AACJ,KAAC,CAAC,CAAA;AACJ,GAAA;AACF,CAAA;;AAEA;AACO,MAAMuB,oBAAoB,SAASnC,mBAAmB,CAAC;AAC5DE,EAAAA,WAAW,CACTkC,KAAa,EACbC,KAAoB,EACpB3B,OAA8B,EAC9B;AACA,IAAA,KAAK,CAAC;MACJA,OAAO;AACPN,MAAAA,GAAG,EAAE,mBAAmB;AACxBC,MAAAA,KAAK,EAAE,mBAAmB;MAC1BM,OAAO,EAAE0B,KAAK,GACT,CAAaD,WAAAA,EAAAA,KAAM,CAAiCC,+BAAAA,EAAAA,KAAM,CAAwB,uBAAA,CAAA,GAClF,CAAaD,WAAAA,EAAAA,KAAM,CAAuC,sCAAA,CAAA;MAC/DxB,QAAQ,EACN,+DAA+D,GAC/D,gEAAA;AACJ,KAAC,CAAC,CAAA;AACJ,GAAA;AACF,CAAA;;AAEA;AACO,MAAM0B,2BAA2B,SAAStC,mBAAmB,CAAC;AACnEE,EAAAA,WAAW,CACTqC,KAAa,EACbC,SAAiB,EACjB9B,OAA8B,EAC9B;AACA,IAAA,KAAK,CAAC;MACJA,OAAO;AACPN,MAAAA,GAAG,EAAE,4BAA4B;AACjCC,MAAAA,KAAK,EAAE,4BAA4B;AACnCM,MAAAA,OAAO,EACJ,CAA4B4B,0BAAAA,EAAAA,KAAM,iBAAgB,GAClD,CAAA,mCAAA,EAAqCC,SAAU,CAAa,YAAA,CAAA;AAC/D5B,MAAAA,QAAQ,EAAE,uCAAA;AACZ,KAAC,CAAC,CAAA;AACJ,GAAA;AACF,CAAA;;AAEA;AACO,MAAM6B,uCAAuC,SAASzC,mBAAmB,CAAC;AAC/EE,EAAAA,WAAW,CAACkC,KAAa,EAAEM,IAAY,EAAEhC,OAA8B,EAAE;AACvE,IAAA,KAAK,CAAC;MACJA,OAAO;AACPN,MAAAA,GAAG,EAAE,wCAAwC;AAC7CC,MAAAA,KAAK,EAAE,wCAAwC;AAC/CM,MAAAA,OAAO,EAAG,CAAA,mBAAA,EAAqB+B,IAAK,CAAA,kDAAA,EAAoDN,KAAM,CAAS,QAAA,CAAA;AACvGxB,MAAAA,QAAQ,EAAE,mCAAA;AACZ,KAAC,CAAC,CAAA;AACJ,GAAA;AACF,CAAA;;AAEA;AACO,MAAM+B,6BAA6B,SAAS3C,mBAAmB,CAAC;AACrEE,EAAAA,WAAW,CAACkC,KAAa,EAAE1B,OAA8B,EAAE;AACzD,IAAA,KAAK,CAAC;MACJA,OAAO;AACPN,MAAAA,GAAG,EAAE,+BAA+B;AACpCC,MAAAA,KAAK,EAAE,+BAA+B;MACtCM,OAAO,EAAG,CAA8CyB,4CAAAA,EAAAA,KAAM,CAAS,QAAA,CAAA;AACvExB,MAAAA,QAAQ,EACN,kFAAA;AACJ,KAAC,CAAC,CAAA;AACJ,GAAA;AACF,CAAA;;AAEA;AACO,MAAMgC,oCAAoC,SAAS5C,mBAAmB,CAAC;EAC5EE,WAAW,CAACQ,OAA8B,EAAE;AAC1C,IAAA,KAAK,CAAC;MACJA,OAAO;AACPN,MAAAA,GAAG,EAAE,oCAAoC;AACzCC,MAAAA,KAAK,EAAE,qCAAqC;AAC5CM,MAAAA,OAAO,EAAG,CAAmF,kFAAA,CAAA;AAC7FC,MAAAA,QAAQ,EAAE,0DAAA;AACZ,KAAC,CAAC,CAAA;AACJ,GAAA;AACF;;;;;;;;;;;;;;;;;;;"}