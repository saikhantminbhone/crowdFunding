{"version":3,"file":"MetaplexError.cjs","sources":["../../../src/errors/MetaplexError.ts"],"sourcesContent":["export type MetaplexErrorSource =\n  | 'sdk'\n  | 'network'\n  | 'rpc'\n  | 'plugin'\n  | 'program';\n\nexport type MetaplexErrorInput = {\n  key: string;\n  title: string;\n  problem: string;\n  solution: string;\n  source: MetaplexErrorSource;\n  sourceDetails?: string;\n  options?: MetaplexErrorOptions;\n};\n\nexport type MetaplexErrorInputWithoutSource = Omit<\n  MetaplexErrorInput,\n  'source' | 'sourceDetails'\n>;\n\nexport type MetaplexErrorOptions = {\n  problem?: string;\n  problemPrefix?: string;\n  problemSuffix?: string;\n  solution?: string;\n  solutionPrefix?: string;\n  solutionSuffix?: string;\n  cause?: Error;\n  logs?: string[];\n};\n\n/** @group Errors */\nexport class MetaplexError extends Error {\n  readonly name: 'MetaplexError' = 'MetaplexError';\n  readonly key: string;\n  readonly title: string;\n  readonly problem: string;\n  readonly solution: string;\n  readonly source: MetaplexErrorSource;\n  readonly sourceDetails?: string;\n  readonly cause?: Error;\n  readonly logs?: string[];\n\n  constructor(input: MetaplexErrorInput) {\n    super(input.problem);\n    this.key = `metaplex.errors.${input.key}`;\n    this.title = input.title;\n    this.problem = overrideWithOptions(\n      input.problem,\n      input.options?.problem,\n      input.options?.problemPrefix,\n      input.options?.problemSuffix\n    );\n    this.solution = overrideWithOptions(\n      input.solution,\n      input.options?.solution,\n      input.options?.solutionPrefix,\n      input.options?.solutionSuffix\n    );\n    this.source = input.source;\n    this.sourceDetails = input.sourceDetails;\n    this.cause = input.options?.cause;\n    this.logs = input.options?.logs;\n    this.message = this.toString(false);\n  }\n\n  getCapitalizedSource(): string {\n    if (this.source === 'sdk' || this.source === 'rpc') {\n      return this.source.toUpperCase();\n    }\n\n    return this.source[0].toUpperCase() + this.source.slice(1);\n  }\n\n  getFullSource(): string {\n    const capitalizedSource = this.getCapitalizedSource();\n    const sourceDetails = this.sourceDetails ? ` > ${this.sourceDetails}` : '';\n\n    return capitalizedSource + sourceDetails;\n  }\n\n  toString(withName = true) {\n    const logs =\n      this.logs != null ? `\\n\\n[ Logs: ${this.logs.join(' |$> ')} ]` : '';\n    const causedBy = this.cause ? `\\n\\nCaused By: ${this.cause}` : '';\n\n    return (\n      (withName ? `[${this.name}] ` : '') +\n      `${this.title}` +\n      `\\n>> Source: ${this.getFullSource()}` +\n      `\\n>> Problem: ${this.problem}` +\n      `\\n>> Solution: ${this.solution}` +\n      causedBy +\n      logs +\n      '\\n'\n    );\n  }\n}\n\nconst overrideWithOptions = (\n  defaultText: string,\n  override?: string,\n  prefix?: string,\n  suffix?: string\n): string => {\n  return [prefix, override ?? defaultText, suffix]\n    .filter((text): text is string => !!text)\n    .join(' ');\n};\n"],"names":["MetaplexError","Error","constructor","input","problem","_defineProperty","key","title","overrideWithOptions","options","problemPrefix","problemSuffix","solution","solutionPrefix","solutionSuffix","source","sourceDetails","cause","logs","message","toString","getCapitalizedSource","toUpperCase","slice","getFullSource","capitalizedSource","withName","join","causedBy","name","defaultText","override","prefix","suffix","filter","text"],"mappings":"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"}